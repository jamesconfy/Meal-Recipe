---
openapi: 3.0.0
info:
  version: 1.0.0
  title: Meal Recipe
servers:
  - url: http://localhost:8080
tags:
  - name: Default
  - name: Users
  - name: Meals
paths:
  "/home":
    get:
      tags:
        - Default
      summary: Home route
      description: Returns JSON if site is up and running
      responses:
        "200":
          description: OK!
          content:
            application/json:
              schema:
                properties:
                  value:
                    type: string
  "/login":
    post:
      tags:
        - Users
      summary: Login
      description: Route to login a user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  msg:
                    type: string
                  access token:
                    type: string
                  refresh token:
                    type: string
  "/register":
    post:
      tags:
        - Users
      summary: Register a user
      description: Route to register a user
      requestBody:
        description: Input your credentials to be registered
        content:
          application/json:
            schema:
              required:
                - email
                - password
                - first name
                - last name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                first name:
                  type: string
                last name:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  "/users":
    get:
      tags:
        - Users
      description: Return list of users
      summary: Users route
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: integer
                      format: int32
                    First Name:
                      type: string
                    Last Name:
                      type: string
                    Email:
                      type: string
                      format: email
                    Date Created:
                      type: string
                      format: date
  "/users/{user_id}":
    get:
      tags:
        - Users
      description: Return the values of a specific user
      summary: Get a specific user
      parameters:
        - in: path
          name: user_id
          required: true
          description: User ID
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  ID:
                    type: integer
                    format: int32
                  First Name:
                    type: string
                  Last Name:
                    type: string
                  Email:
                    type: string
                    format: email
                  Date Created:
                    type: string
                    format: date
    patch:
      tags:
        - Users
      description: Update the details of a specific user
      summary: Update user
      parameters:
        - in: path
          name: user_id
          required: true
          description: User ID
          schema:
            type: integer
            format: int32
      requestBody:
        description: Input your updated details
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  format: email
                first name:
                  type: string
                last name:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  msg:
                    type: string
    delete:
      description: Delete a specific user
      summary: Delete user
      tags:
        - Users
      parameters:
        - in: path
          name: user_id
          required: true
          description: User ID
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  msg:
                    type: string
